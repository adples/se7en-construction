<?php
/**
 * wrapper Block
 *
 * This block was generated by create-acf-block-json.
 *
 * @package WordPress
 *
 * @param   array $block The block settings and attributes.
 * @param   string $content The block inner HTML (empty).
 * @param   bool $is_preview True during AJAX preview.
 * @param   (int|string) $post_id The post ID this block is saved to.
 *
 * _tw safelist classes
 * pt-10 pt-15 pt-20 pt-25 pt-30 pt-35 pt-40
 * xl:pt-10 xl:pt-15 xl:pt-20 xl:pt-25 xl:pt-30 xl:pt-35 xl:pt-40
 * pb-10 pb-15 pb-20 pb-25 pb-30 pb-35 pb-40
 * block sm:block md:block lg:block xl:block 2xl:block
 * hidden sm:hidden md:hidden lg:hidden xl:hidden 2xl:hidden
 */


$block_name = 'wrapper';

$namespace = 'acf';

$block_name = 'wp-block-' . $namespace . '-' . $block_name;

// Block #id
$anchor = ( empty( $block['anchor'] ) ) ? null : 'id=' . $block['anchor'];

// Block BG
$background = ( empty( $block['backgroundColor'] ) ) ? '' : 'has-' . $block['backgroundColor'] . '-background-color';

$has_background = $background ? 'has-background' : '';

// Block padding
$padding_top = ( empty( $block['style']['spacing']['padding']['top'] ) ) ? '' : preg_replace('~\D~', '', $block['style']['spacing']['padding']['top']);
if(!empty( $padding_top )) $padding_top = 'pt-'.((int)$padding_top/2 - 10).' xl:pt-'.(int)$padding_top/2;

$padding_bot = ( empty( $block['style']['spacing']['padding']['bottom'] ) ) ? '' : preg_replace('~\D~', '', $block['style']['spacing']['padding']['bottom']);
if(!empty( $padding_bot )) $padding_bot = 'pb-'.(int)$padding_bot/2;

// Default wrapper padding **NOTE MAKE CUSTOMIZER SETTING**
$wrapper_padding = '';
$icon = false;

// Additional editor classes including $block['style'] defined in block.json
$additional_classes = $block['className'] ?? '';

// Filter Overlay
$rand = rand ( 10000 , 99999 );
if( get_field('filter') ){
	$filter = 'bg-filter relative overflow-hidden filter-'.$rand;
} else {
	$filter = '';
}

//if( get_field('stylized') ) $stylized = true;
$stylized = get_field('stylized') ?: false;

$default_wrapper_styles = 'wrapper-inner px-4 py-8 md:px-8 md:py-12 lg:px-12 lg:py-16 relative bg-white rounded-[1rem] md:rounded-[2rem] lg:rounded-[3rem]';

if( get_field('style') === 'border' ){
	$wrapper_styles = '!rounded-tl-none border-2';
} else{
	$wrapper_styles = '!rounded-bl-none shadow-(--subtle-shadow)';
}

$icon = get_field('icon') ? '<span class="wrapper-icon icon-[material-symbols-light--asterisk-rounded] absolute size-20 top-4 right-4 lg:size-26 lg:top-6 lg:right-6 xl:size-36  xl:top-2 2xl:size-48 2xl:top-4 2xl:right-4 text-foreground"></span>' : '';

// Create array $all_classes and implode
$all_classes = array(
	$block_name,
	$background,
	$has_background,
	$padding_top,
	$padding_bot,
	$wrapper_padding,
	$filter,
	$additional_classes,
);

$classes = implode( ' ', $all_classes );

// Container
if( get_field('container') ) {
	$container = 'relative z-1 container content-wrapper px-6 mx-auto';
} else{
	$container = 'relative z-1 content-wrapper';
}


// Background Image
$bg= '';
if( get_field('bg') ){
	$bg = get_field('bg');
	$bg_md = wp_get_attachment_image_src($bg['id'], 'medium_large');
	$bg_full = wp_get_attachment_image_src($bg['id'], 'full');

	$attributes = 'class="'.$classes.' bg-cover bg-center bg-no-repeat bg-resize" style="background-image: url('.$bg_md[0].')" data-img-md="'.$bg_md[0].'" data-img-full="'.$bg_full[0].'"';
} else {
	$attributes = 'class="'.$classes.'"';
}

?>

<!-- Inline Style for Filter Overlay -->
<?php if( !empty( $filter ) ): ?>
	<style>
		.filter-<?php echo $rand; ?>::before{
			background-color: <?php echo get_field('filter'); ?>
		}
	</style>
<?php endif; ?>
<!-- / Inline Style for Filter Overlay -->

<section <?php echo esc_attr( $anchor ); ?> <?php echo $attributes ?>>

	<div class="<?php echo $container ?>">
		<div class="<?php if( $stylized ) echo $default_wrapper_styles.' '.$wrapper_styles; ?>">
			<?php echo $icon ?>
			<InnerBlocks />
		</div>
	</div>

</section>
